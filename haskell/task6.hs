-- Туркин Александр, задача № 6, вариант 3.
-- Составить программу для вычисления n-го члена бесконечной упорядоченной последовательности целых положительных чисел, составленной из всех чисел вида 2k и 3*2k.

module Task6 where
import UnitTests

-- Функция nsequence генерирует бесконечный список упорядоченной последовательности целых положительных чисел, составленный из всех чисел вида 2^k и 3*2^k
-- Аргументы: отсутствуют
-- Результат: бесконечный список последовательности
nsequence :: [Integer]
nsequence = nsequence' 0
-- Функция nsequence -- вспомогательная, вычисляет два очередных элемента последовательности и создает бесконечный список оставшихся элементов последовательности, которые вычисляеются, когда нужно
-- Аргументы: предыдущий член последовательности (или 0, если надо создать начало последовательности)
-- Результат: список членов последовательности, идущие после данного
nsequence' :: Integer -> [Integer]
nsequence' 0 = 1 : nsequence' (1)
nsequence' a = next : (a+next) : ( nsequence' (next) ) where next = a*2
 

main = unitTests [
        ( nsequence !! 5, 8 ),
        ( nsequence !! 10,  48),
        ( nsequence !! 15,  256),
        ( nsequence !! 20,  1536 ),
        ( nsequence !! 30, 49152 ),
        ( nsequence !! 100, 1688849860263936 ) ]
